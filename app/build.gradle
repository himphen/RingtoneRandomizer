apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "hibernate.v2.ringtonerandomizer"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 213310
        versionName "3.3.1"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            buildConfigField "String", "ADMOB_KEY", "\"" + getSecretKey("ADMOB_KEY") + "\""
            buildConfigField "String", "ADMOB_APP_ID", "\"" + getSecretKey("ADMOB_APP_ID") + "\""
            resValue "string", "ADMOB_APP_ID", getSecretKey("ADMOB_APP_ID")
            buildConfigField "String[]", "ADMOB_DEVICE_ID", getSecretKey("ADMOB_DEVICE_ID")
            buildConfigField "String", "GOOGLE_IAP_KEY", "\"" + getSecretKey("GOOGLE_IAP_KEY") + "\""
            buildConfigField "String", "CONTACT_EMAIL", "\"" + getSecretKey("CONTACT_EMAIL") + "\""
            resValue "string", "CONTACT_EMAIL", getSecretKey("CONTACT_EMAIL")
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ADMOB_KEY", "\"" + getSecretKey("ADMOB_KEY") + "\""
            buildConfigField "String", "ADMOB_APP_ID", "\"" + getSecretKey("ADMOB_APP_ID") + "\""
            resValue "string", "ADMOB_APP_ID", getSecretKey("ADMOB_APP_ID")
            buildConfigField "String[]", "ADMOB_DEVICE_ID", getSecretKey("ADMOB_DEVICE_ID")
            buildConfigField "String", "GOOGLE_IAP_KEY", "\"" + getSecretKey("GOOGLE_IAP_KEY") + "\""
            buildConfigField "String", "CONTACT_EMAIL", "\"" + getSecretKey("CONTACT_EMAIL") + "\""
            resValue "string", "CONTACT_EMAIL", getSecretKey("CONTACT_EMAIL")
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def getSecretKey(name) {
    Properties props = new Properties()
    File f = new File('./../Key/ringtonerandomizer.secrets.properties')
    if (f.exists()) {
        props.load(new FileInputStream(f))
        return props[name]
    } else {
        return name
    }
}

dependencies {
    // Google AndroidX Support
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    // Google Play Services
    implementation 'com.google.firebase:firebase-core:17.2.2'
    implementation 'com.google.firebase:firebase-ads:18.3.0'

    // Material Dialog
    implementation 'com.afollestad.material-dialogs:core:3.1.1'

    // Simple IAB
    implementation 'com.anjlab.android.iab.v3:library:1.0.44'

    // https://github.com/Blankj/AndroidUtilCode
    implementation 'com.blankj:utilcode:1.26.0'

    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // https://github.com/javiersantos/AppUpdater
    implementation 'com.github.javiersantos:AppUpdater:2.7'
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.orhanobut:logger:2.2.0'
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}